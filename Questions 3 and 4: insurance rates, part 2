Life insurance rates are calculated using mortality statistics from the recent past. They are priced such that companies are almost assured to 
profit as long as the probability of death remains similar. 
If an event occurs that changes the probability of death in a given age group, the company risks significant losses.

In this 6-part question, we'll look at a scenario in which a lethal pandemic disease increases the probability of death within 1 year for a 50 year old to .015. 
Unable to predict the outbreak, the company has sold 1,000 $150,000 life insurance policies for $1,150.

Question 3a

What is the expected value of the company's profits over 1,000 policies?

Answer code:
loss <- -150000
premium <- 1150
n <- 1000
e <- (loss*p) + (premium*(1-p))
e*n


Question 3b

What is the standard error of the expected value of the company's profits over 1,000 policies?

Answer: 

n <- 1000
loss <- -150000
premium <- 1150
p <- 0.015
se <- sqrt(n)*(abs(loss-premium)*sqrt(p*(1-p)))

Question 3c

What is the probability of the company losing money?

Answer: 

n <- 1000
avg <- n * (loss*p + 1150*(1-p))
se <- sqrt(n) * (premium - loss)*sqrt(p*(1-p))
pnorm(0, avg, se)

Question 3d

Suppose the company can afford to sustain one-time losses of $1 million, but larger losses will force it to go out of business.

What is the probability of losing more than $1 million?

Answer code:

loss <- -1000000
pnorm(loss, avg, se)

Question 3e

Investigate death probabilities p <- seq(.01, .03, .001).

What is the lowest death probability for which the chance of losing money exceeds 90%?

Answer code:

n <- 1000
payout <- -150000
premium <- 1150
p <- seq(.01, .03, .001)

prob <- sapply(p, function(v){
  mu <- n*(loss*v+premium*(1-v))
  se <- sqrt(n)*abs(premium-loss)*sqrt(v*(1-v))
  pnorm(0, mu, se)
})

min(p[which(prob>0.9)]) 
 
Question 3f

Investigate death probabilities p <- seq(.01, .03, .0025).

What is the lowest death probability for which the chance of losing over $1 million exceeds 90%?

n <- 1000
loss <- -150000
premium <- 1150
p <- seq(.01, .03, .0025)

prob <- sapply(p, function(v){
  mu <- n*(loss*v+premium*(1-v))
  se <- sqrt(n)*abs(premium-loss)*sqrt(v*(1-v))
  pnorm(0, mu, se)
})
 
min(p[which(prob>0.9)])

Question 4a

Define a sampling model for simulating the total profit over 1,000 loans with probability of claim p_loss = .015, loss of -$150,000 on a claim, 
and profit of $1,150 when there is no claim. Set the seed to 25, then run the model once.

What is the reported profit (or loss) in millions (that is, divided by 106)?

p_loss <- 0.015
n <- 1000
profit <- 1150
loss <- -150000
set.seed(25, sample.kind="Rounding")
total <- sample(c(loss, profit), n, replace=TRUE, prob=c(p_loss, (1-p_loss)))
sum(total/10^6)

Question 4b

Set the seed to 27, then run a Monte Carlo simulation of your sampling model with 10,000 replicates to simulate the range of profits/losses over 1,000 loans.

What is the observed probability of losing $1 million or more?

n <- 1000
p_loss <- .015 
loss <- -150000
profit <- 1150
set.seed(27, sample.kind="Rounding")
B <- 10000

#Monte Carlo simulation

range <- replicate(B, {
  total <- sample(c(loss, profit), n, replace=TRUE, prob=c(p_loss, (1-p_loss)))
  sum(total)
})

mean(range<=-10^6)

